{"version":3,"file":"static/js/add.fbee22e8.chunk.js","mappings":"4NACA,EAAiC,+BAAjC,EAAuF,qCAAvF,EAAoJ,sCAApJ,EAAkN,sCAAlN,EAAmR,yC,SC8GnR,MAzGA,YAA6D,IAApCA,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,QAC/C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAAsCR,EAAAA,EAAAA,UAAS,IAA/C,eAAOS,EAAP,KAAoBC,EAApB,KAGMC,GADWC,EAAAA,EAAAA,MACQC,SAASC,MAAM,KAAKC,UAAU,GAEjDC,EAAoB,SAACT,GAAD,OAAYA,EAAOO,MAAM,MAE7CG,EAAW,mCAAG,WAAOC,GAAP,oEAClBA,EAAEC,iBAEe,SAAbtB,EAHc,iCAIVuB,EAAAA,EAAAA,IAAK,CACTnB,MAAAA,EACAE,KAAAA,EACAE,OAAAA,EACAE,OAAQS,EAAkBT,GAC1BE,YAAAA,IATc,OAWfX,IAXe,wCAcVuB,EAAAA,EAAAA,IAAIV,EAAS,CACjBV,MAAAA,EACAE,KAAAA,EACAE,OAAAA,EACAE,OAAQS,EAAkBT,GAC1BE,YAAAA,IAnBc,OAsBhBV,IAtBgB,4CAAH,sDA0BjB,OACE,gBAAKuB,UAAWC,EAAhB,UACE,kBAAMC,SAAUP,EAAaK,UAAWC,EAAxC,WACE,kBAAOD,UAAWC,EAA8BE,QAAQ,QAAxD,qBACA,kBACEH,UAAWC,EACXG,MAAOzB,EACP0B,SAAU,SAACT,GAAD,OAAOhB,EAASgB,EAAEU,OAAOF,QACnCG,KAAK,OACLC,GAAG,QACHC,KAAK,QACLC,YAAY,cACZC,UAAQ,KAGV,kBAAOX,UAAWC,EAA8BE,QAAQ,OAAxD,oBACA,kBACEH,UAAWC,EACXG,MAAOvB,EACPwB,SAAU,SAACT,GAAD,OAAOd,EAAQc,EAAEU,OAAOF,QAClCG,KAAK,OACLC,GAAG,OACHC,KAAK,OACLC,YAAY,OACZC,UAAQ,KAGV,kBAAOX,UAAWC,EAA8BE,QAAQ,SAAxD,sBACA,kBACEH,UAAWC,EACXG,MAAOrB,EACPsB,SAAU,SAACT,GAAD,OAAOZ,EAAUY,EAAEU,OAAOF,QACpCG,KAAK,OACLC,GAAG,SACHC,KAAK,SACLC,YAAY,cACZC,UAAQ,KAGV,kBAAOX,UAAWC,EAA8BE,QAAQ,SAAxD,sBACA,kBACEH,UAAWC,EACXG,MAAOnB,EACPoB,SAAU,SAACT,GAAD,OAAOV,EAAUU,EAAEU,OAAOF,QACpCG,KAAK,OACLC,GAAG,SACHC,KAAK,SACLE,UAAQ,KAGV,kBAAOX,UAAWC,EAA8BE,QAAQ,cAAxD,2BACA,kBACEH,UAAWC,EACXG,MAAOjB,EACPkB,SAAU,SAACT,GAAD,OAAOR,EAAeQ,EAAEU,OAAOF,QACzCG,KAAK,OACLC,GAAG,cACHC,KAAK,cACLE,UAAQ,KAGV,kBAAOX,UAAWC,EAAiCM,KAAK,SAASH,MAAM,6B,uFCxG/E,GAAgB,gBAAkB,iC,SCqBlC,MAlBA,SAAkBQ,GAChB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,iBAAKd,UAAWC,EAAAA,SAAhB,WACE,eAAID,UAAWC,EAAAA,gBAAf,+BACA,SAACc,EAAA,EAAD,CAAgBvC,aATG,WACrBoC,EAAMI,YACNH,EAAS,MAOuCtC,SAAS,c,4JChBvD0C,EAAW,gDAGXC,EAAM,eAACV,EAAD,uDAAM,GAAN,OAAaW,MAAM,GAAD,OAAIF,EAAJ,YAAgBT,IAAMY,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGhExB,EAAO,SAACyB,GAAD,OACXJ,MAAMF,EAAU,CACdO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBF,KAAMG,KAAKC,UAAUJ,MAInBK,EAAM,mCAAG,WAAOpB,GAAP,iFAAoBW,MAAM,GAAD,OAAIF,EAAJ,YAAgBT,GAAM,CAAEgB,OAAQ,WAAzD,mFAAH,sDAINzB,EAAM,SAACS,EAAIe,GAAL,OACVJ,MAAM,GAAD,OAAIF,EAAJ,YAAgBT,GAAM,CACzBgB,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBF,KAAMG,KAAKC,UAAUJ","sources":["webpack://edgemony-movie-db/./src/components/CreateCardForm/styles.module.scss?5186","components/CreateCardForm/index.jsx","webpack://edgemony-movie-db/./src/pages/AddMovie/styles.module.scss?5bde","pages/AddMovie/index.jsx","utils/http.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CreateCardForm\":\"styles_CreateCardForm__j0Ueu\",\"CreateCardForm__form\":\"styles_CreateCardForm__form__TAs8d\",\"CreateCardForm__label\":\"styles_CreateCardForm__label__EHUzy\",\"CreateCardForm__input\":\"styles_CreateCardForm__input__iV8Zt\",\"CreateCardForm__inputSub\":\"styles_CreateCardForm__inputSub__1RhSy\"};","import { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { POST, PUT } from \"../../utils/http\";\nimport styles from \"./styles.module.scss\";\n\n\nfunction CreateCardForm({callType, compCallBack, compPut }) {\n  const [title, setTitle] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [poster, setPoster] = useState(\"\");\n  const [genres, setGenres] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const location = useLocation();\n  const movieId = location.pathname.split(\"/\").reverse()[0];\n\n  const unStringifyGenres = (genres) => genres.split(\",\");\n\n  const addNewMovie = async (e) => {\n    e.preventDefault();\n\n    if (callType === \"POST\") {\n      await POST({\n        title,\n        year,\n        poster,\n        genres: unStringifyGenres(genres),\n        description,\n      });\n       compCallBack();\n     \n    } else {\n      await PUT(movieId, {\n        title,\n        year,\n        poster,\n        genres: unStringifyGenres(genres),\n        description,\n      });\n\n      compPut();\n    }\n  };\n\n  return (\n    <div className={styles.CreateCardForm}>\n      <form onSubmit={addNewMovie} className={styles.CreateCardForm__form}>\n        <label className={styles.CreateCardForm__label} htmlFor=\"title\">Title:</label>\n        <input\n          className={styles.CreateCardForm__input}\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Titolo Film\"\n          required\n        />\n\n        <label className={styles.CreateCardForm__label} htmlFor=\"year\">Year:</label>\n        <input\n          className={styles.CreateCardForm__input}\n          value={year}\n          onChange={(e) => setYear(e.target.value)}\n          type=\"text\"\n          id=\"year\"\n          name=\"year\"\n          placeholder=\"Anno\"\n          required\n        />\n\n        <label className={styles.CreateCardForm__label} htmlFor=\"poster\">Poster:</label>\n        <input\n          className={styles.CreateCardForm__input}\n          value={poster}\n          onChange={(e) => setPoster(e.target.value)}\n          type=\"text\"\n          id=\"poster\"\n          name=\"poster\"\n          placeholder=\"Poster Film\"\n          required\n        />\n\n        <label className={styles.CreateCardForm__label} htmlFor=\"genres\">Genres:</label>\n        <input\n          className={styles.CreateCardForm__input}\n          value={genres}\n          onChange={(e) => setGenres(e.target.value)}\n          type=\"text\"\n          id=\"genres\"\n          name=\"genres\"\n          required\n        />\n\n        <label className={styles.CreateCardForm__label} htmlFor=\"description\">Description:</label>\n        <input\n          className={styles.CreateCardForm__input}\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          required\n        />\n\n        <input className={styles.CreateCardForm__inputSub} type=\"submit\" value=\"Conferma Modifica\" />\n      </form>\n    </div>\n  );\n}\n\nexport default CreateCardForm;","// extracted by mini-css-extract-plugin\nexport default {\"AddMovie__title\":\"styles_AddMovie__title__HUdcV\"};","import { useNavigate } from \"react-router-dom\";\nimport CreateCardForm from \"./../../components/CreateCardForm\";\nimport styles from \"./styles.module.scss\";\n\nfunction AddMovie(props) {\n  const navigate = useNavigate();\n\n  const submitComplete = () => {\n    props.addSucces();\n    navigate(\"/\");\n    \n  };\n\n  return (\n    <div className={styles.AddMovie}>\n      <h1 className={styles.AddMovie__title}>Add a new movie.</h1>\n      <CreateCardForm compCallBack={submitComplete} callType=\"POST\" />\n      \n    </div>\n  );\n}\n\nexport default AddMovie;","const BASE_URL = \"https://edgemony-backend.herokuapp.com/movies\";\n\n// GET\nconst GET = (id = \"\") => fetch(`${BASE_URL}/${id}`).then((res) => res.json());\n\n// POST\nconst POST = (body) =>\n  fetch(BASE_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\n// DELETE\nconst DELETE = async (id) => await fetch(`${BASE_URL}/${id}`, { method: \"DELETE\" });\n\n\n// PUT\nconst PUT = (id, body) =>\n  fetch(`${BASE_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\nexport { GET, POST, DELETE, PUT };"],"names":["callType","compCallBack","compPut","useState","title","setTitle","year","setYear","poster","setPoster","genres","setGenres","description","setDescription","movieId","useLocation","pathname","split","reverse","unStringifyGenres","addNewMovie","e","preventDefault","POST","PUT","className","styles","onSubmit","htmlFor","value","onChange","target","type","id","name","placeholder","required","props","navigate","useNavigate","CreateCardForm","addSucces","BASE_URL","GET","fetch","then","res","json","body","method","headers","JSON","stringify","DELETE"],"sourceRoot":""}