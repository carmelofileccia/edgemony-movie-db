{"version":3,"file":"static/js/edit.64b3a138.chunk.js","mappings":"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","sources":["webpack://edgemony-movie-db/./src/components/CardItem/styles.module.scss?af11","components/CardItem/index.jsx","webpack://edgemony-movie-db/./src/components/CreateCardForm/styles.module.scss?5186","components/CreateCardForm/index.jsx","webpack://edgemony-movie-db/./src/pages/EditMovie/styles.module.scss?8226","pages/EditMovie/index.jsx","utils/http.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CardItem\":\"styles_CardItem__QIsX0\",\"CardItem__btn\":\"styles_CardItem__btn__kdQps\",\"CardItem__img\":\"styles_CardItem__img__0YMjP\",\"CardItem__title\":\"styles_CardItem__title__8Xi6k\",\"CardItem__p\":\"styles_CardItem__p__kWqhj\",\"CardItem__ul\":\"styles_CardItem__ul__9Gw1l\",\"CardItem__genre\":\"styles_CardItem__genre__oqVv8\",\"CardItem__desc\":\"styles_CardItem__desc__YeUow\"};","import { Link } from \"react-router-dom\";\nimport {DELETE} from \"../../utils/http\";\nimport styles from \"./styles.module.scss\";\n\n\nfunction CardItem({ cardData}) {\n  \n\n  const onCardDelete =() => {\n    DELETE(cardData.id).then((data) => window.location.reload(\"/\"));\n  }\n\n  return (\n    <div className={styles.CardItem}>\n      <Link className={styles.CardItem__link}to={`/edit-movie/${cardData.id}`}>\n        <h2 className={styles.CardItem__title}>{cardData.title}</h2>\n      </Link>\n        \n      <p className={styles.CardItem__year}>{cardData.year}</p>\n      <img className={styles.CardItem__img} src={cardData.poster} alt={cardData.title} />\n      <p className={styles.CardItem__desc}>{cardData.description}</p>\n      <div className={styles.CardItem__genre}>\n        <ul className={styles.CardItem__ul}>\n          {cardData.genres &&\n            cardData.genres.map((genre, i) => <li key={i} className={styles.CardItem__genre}>{genre}</li> )}\n        </ul>\n      </div>\n      <button onClick={onCardDelete} className={styles.CardItem__btn}>✖️</button>   \n    </div>\n  );\n}\n\nexport default CardItem;","// extracted by mini-css-extract-plugin\nexport default {\"CreateCardForm\":\"styles_CreateCardForm__j0Ueu\",\"CreateCardForm__form\":\"styles_CreateCardForm__form__TAs8d\",\"CreateCardForm__label\":\"styles_CreateCardForm__label__EHUzy\",\"CreateCardForm__input\":\"styles_CreateCardForm__input__iV8Zt\",\"CreateCardForm__inputSub\":\"styles_CreateCardForm__inputSub__1RhSy\"};","import { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { POST, PUT } from \"../../utils/http\";\nimport styles from \"./styles.module.scss\";\n\n\nfunction CreateCardForm({callType, compCallBack, compPut }) {\n  const [title, setTitle] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [poster, setPoster] = useState(\"\");\n  const [genres, setGenres] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const location = useLocation();\n  const movieId = location.pathname.split(\"/\").reverse()[0];\n\n  const unStringifyGenres = (genres) => genres.split(\",\");\n\n  const addNewMovie = async (e) => {\n    e.preventDefault();\n\n    if (callType === \"POST\") {\n      await POST({\n        title,\n        year,\n        poster,\n        genres: unStringifyGenres(genres),\n        description,\n      });\n       compCallBack();\n     \n    } else {\n      await PUT(movieId, {\n        title,\n        year,\n        poster,\n        genres: unStringifyGenres(genres),\n        description,\n      });\n\n      compPut();\n    }\n  };\n\n  return (\n    <div className={styles.CreateCardForm}>\n      <form onSubmit={addNewMovie} className={styles.CreateCardForm__form}>\n        <label className={styles.CreateCardForm__label} htmlFor=\"title\">Title:</label>\n        <input\n          className={styles.CreateCardForm__input}\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Titolo Film\"\n          required\n        />\n\n        <label className={styles.CreateCardForm__label} htmlFor=\"year\">Year:</label>\n        <input\n          className={styles.CreateCardForm__input}\n          value={year}\n          onChange={(e) => setYear(e.target.value)}\n          type=\"text\"\n          id=\"year\"\n          name=\"year\"\n          placeholder=\"Anno\"\n          required\n        />\n\n        <label className={styles.CreateCardForm__label} htmlFor=\"poster\">Poster:</label>\n        <input\n          className={styles.CreateCardForm__input}\n          value={poster}\n          onChange={(e) => setPoster(e.target.value)}\n          type=\"text\"\n          id=\"poster\"\n          name=\"poster\"\n          placeholder=\"Poster Film\"\n          required\n        />\n\n        <label className={styles.CreateCardForm__label} htmlFor=\"genres\">Genres:</label>\n        <input\n          className={styles.CreateCardForm__input}\n          value={genres}\n          onChange={(e) => setGenres(e.target.value)}\n          type=\"text\"\n          id=\"genres\"\n          name=\"genres\"\n          required\n        />\n\n        <label className={styles.CreateCardForm__label} htmlFor=\"description\">Description:</label>\n        <input\n          className={styles.CreateCardForm__input}\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          required\n        />\n\n        <input className={styles.CreateCardForm__inputSub} type=\"submit\" value=\"Conferma Modifica\" />\n      </form>\n    </div>\n  );\n}\n\nexport default CreateCardForm;","// extracted by mini-css-extract-plugin\nexport default {\"EditMovie\":\"styles_EditMovie__0ZtzC\"};","import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { GET } from \"../../utils/http\";\n\nimport CardItem from \"../../components/CardItem\";\nimport CreateCardForm from \"../../components/CreateCardForm\";\nimport styles from \"./styles.module.scss\";\n\nfunction EditMovie(props) {\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const [movieData, setMovieData] = useState({});\n  const movieId = location.pathname.split(\"/\").reverse()[0];\n  \n  useEffect(() => {\n    GET(movieId).then((data) => setMovieData(data));\n    \n  }, [movieId]);\n\n  const defPut = () => {\n    props.editSucces();\n    navigate(\"/\");\n  };\n\n  \n\n\n  return (\n    <div className={styles.EditMovie}>\n      <CardItem cardData={movieData} />\n      <CreateCardForm   callType=\"PUT\" compPut={defPut} />\n    </div>\n  );\n}\n\nexport default EditMovie;","const BASE_URL = \"https://edgemony-backend.herokuapp.com/movies\";\n\n// GET\nconst GET = (id = \"\") => fetch(`${BASE_URL}/${id}`).then((res) => res.json());\n\n// POST\nconst POST = (body) =>\n  fetch(BASE_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\n// DELETE\nconst DELETE = async (id) => await fetch(`${BASE_URL}/${id}`, { method: \"DELETE\" });\n\n\n// PUT\nconst PUT = (id, body) =>\n  fetch(`${BASE_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\nexport { GET, POST, DELETE, PUT };"],"names":["cardData","className","styles","to","id","title","year","src","poster","alt","description","genres","map","genre","i","onClick","DELETE","then","data","window","location","reload","callType","compCallBack","compPut","useState","setTitle","setYear","setPoster","setGenres","setDescription","movieId","useLocation","pathname","split","reverse","unStringifyGenres","addNewMovie","e","preventDefault","POST","PUT","onSubmit","htmlFor","value","onChange","target","type","name","placeholder","required","props","navigate","useNavigate","movieData","setMovieData","useEffect","GET","CardItem","CreateCardForm","editSucces","BASE_URL","fetch","res","json","body","method","headers","JSON","stringify"],"sourceRoot":""}